mutation SignIn($token: String) {
  signIn(token: $token)
}

query Post($postId: String!) {
  findUniquePost(filter: { id: $postId }) {
    id
    published
    title
    content
    authorId
    cardId
    createdAt
    updatedAt
    publishedAt
    categories {
      id
      name
      createdAt
      updatedAt
    }
  }
}

query Posts {
  findManyPost(orderBy: { publishedAt: Desc }) {
    id
    published
    title
    authorId
    cardId
    createdAt
    updatedAt
    publishedAt
    categories {
      id
      name
      createdAt
      updatedAt
    }
  }
}

mutation UpdateOnePost($categories: [CategoryUniqueFilter!], $where: PostUniqueFilter!) {
  updateOnePost(data: { categories: { set: $categories } }, where: $where) {
    id
  }
}
mutation UpdatePost(
  $postId: String
  $title: String
  $content: String
  $published: Boolean
  $publishedAt: DateTime
  $categories: [CategoryUniqueFilter!]
) {
  updateOnePost(
    data: {
      id: $postId
      title: $title
      content: $content
      published: $published
      publishedAt: $publishedAt
      categories: { set: $categories }
    }
    where: { id: $postId }
  ) {
    id
    published
    title
    content
    authorId
    createdAt
    updatedAt
    publishedAt
    categories {
      id
      name
      createdAt
      updatedAt
    }
    cardId
  }
}

# mutation UploadPostFile($postId: String!, $binary: Upload!) {
#   PostFile(postId: $postId, binary: $binary) {
#     id
#     createdAt
#     updatedAt
#     name
#     mimeType
#   }
# }

query System {
  findUniqueSystem(filter: { id: "system" }) {
    id
    title
    description
    iconId
    cardId
    createdAt
    updatedAt
    icon {
      id
      name
      mimeType
      createdAt
      updatedAt
    }
  }
}

mutation UpdateSystem($title: String, $description: String) {
  updateOneSystem(data: { title: $title, description: $description }, where: { id: "system" }) {
    id
    title
    description
    iconId
    cardId
    createdAt
    updatedAt
    icon {
      id
      name
      mimeType
      createdAt
      updatedAt
    }
  }
}

query Category($id: String!) {
  findUniqueCategory(filter: { id: $id }) {
    id
    name
    createdAt
    updatedAt
  }
}
query Categories {
  findManyCategory {
    id
    name
    createdAt
    updatedAt
  }
}

mutation UpdateCategory($id: String, $name: String!) {
  updateOneCategory(where: { id: $id }, data: { name: $name }) {
    id
    name
    createdAt
    updatedAt
  }
}
